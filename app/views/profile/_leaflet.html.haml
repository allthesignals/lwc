%div#map
%div.row
  %div#summary-panel
    %div.red-strip
    %div.row#wage-bar-chart.center-content
      %div.col-md-12
        %h5{style: "text-align:left;"}=@geography.name
        %div#donut-chart-menu.form-group.form-inline
          %label.control-label
            For a family of:

:javascript

  var map = L.map('map', {
    scrollWheelZoom: false,
    zoomControl: false,
    attributionControl: false
  });

  map.dragging.disable();
  map.touchZoom.disable();
  map.doubleClickZoom.disable();
  map.scrollWheelZoom.disable();

  var censusStates = new L.TileLayer.WMS("http://tigerweb.geo.census.gov/ArcGIS/services/tigerWMS/MapServer/WMSServer",
        {
            layers: 'States',
            format: 'image/png',
            transparent: true,
            attribution: "U.S. Census TIGERweb"
        });

  var censusCounties = new L.TileLayer.WMS("http://tigerweb.geo.census.gov/ArcGIS/services/tigerWMS/MapServer/WMSServer",
          {
              layers: 'Counties',
              format: 'image/png',
              transparent: true,
              attribution: "U.S. Census TIGERweb"
          });

  L.tileLayer('http://a{s}.acetate.geoiq.com/tiles/acetate-hillshading/{z}/{x}/{y}.png', {
      attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
  }).addTo(map);

  var url_string = "";
  var zoom_level = 6;
  var twoZero = d3.format("02d"); //format digits for the API
  var fiveZero = d3.format("05d");
  var fiveZero = d3.format("05d");
  var style = {
      fillColor: "#000000",
      weight: 0,
      fillOpacity: 0.2 };

  if (gon.census_type == "state") {
    url_string = "http://api.censusreporter.org/1.0/geo/tiger2012/04000US" + twoZero(gon.census_id) + "?geom=true";
  }

  if (gon.census_type == "county") {
    url_string = "http://api.censusreporter.org/1.0/geo/tiger2012/05000US" + fiveZero(gon.census_id) + "?geom=true";
  }

  if (gon.census_type == "metro") {
    url_string = "http://api.censusreporter.org/1.0/geo/tiger2012/31000US" + fiveZero(gon.census_id) + "?geom=true";
  }

  $.getJSON(url_string, function(d){
    var data = L.geoJson(d, {style: style});
    data.addTo(map);
    map.fitBounds(data.getBounds());
    var offset = map.getSize().x*0.25;
    // Then move the map
    map.panBy(new L.Point(-offset, 0), {animate: false});
  });